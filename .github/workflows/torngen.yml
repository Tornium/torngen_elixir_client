name: Elixir Torn APIv2 code generation via Torngen

on:
  schedule:
    cron: "* * * * 1-5"
  workflow_dispatch:

permissions:
  pull-requests: write
  contents: write

env:
  MIX_ENV: prod
  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

jobs:
  generate:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        include:
          # Latest version
          - elixir: "1.18"
            otp: "27.2"
    steps:
      - name: Check out this repository
        uses: actions/checkout@v4

      - name: Set up Erlang and Elixir
        uses: erlef/setup-beam@v1
        with:
          otp-version: ${{matrix.otp}}
          elixir-version: ${{matrix.elixir}}

      - name: Cache Mix dependencies
        uses: actions/cache@v3
        id: cache-deps
        with:
          path: |
            deps
            _build
          key: |
            mix-${{ runner.os }}-${{matrix.elixir}}-${{matrix.otp}}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            mix-${{ runner.os }}-${{matrix.elixir}}-${{matrix.otp}}-

      - run: mix do deps.get --check-locked, deps.compile
        if: steps.cache-deps.outputs.cache-hit != 'true'

      - run: rm -rf lib && mkdir lib

      - run: wget -U "torngen-gh-action" https://www.torn.com/swagger/openapi.json

      - run: mix torngen.generate

      - run: mix format

      - run: mix compile
      
      - id: get_version
        run: cat lib/VERSION && echo "version=$(cat lib/VERSION)" >> $GITHUB_OUTPUT

      - name: Create Pull Request
        run: |
          gh pr create --title "[torngen] Generated v${{ steps.get_version.outputs.version }}" \
                       --body "This PR contains autogenerated changes." \
                       --base master \
                       --head torngen/auto \
                       || gh pr edit torngen/auto --title "[torngen] Generated v${{ steps.get_version.outputs.version }}" --body "This PR contains autogenerated changes."
